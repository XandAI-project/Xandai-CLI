name: Build and Publish to PyPI

on:
  # Trigger on tag creation (releases)
  push:
    tags:
      - 'v*.*.*'
  
  # Allow manual workflow dispatch for testing
  workflow_dispatch:

jobs:
  test:
    name: Test Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black isort
      
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Format check with black
        run: |
          black --check --diff .
        continue-on-error: true
      
      - name: Import sort check
        run: |
          isort --check-only --diff .
        continue-on-error: true
      
      - name: Test with pytest
        run: |
          pytest --cov=xandai --cov-report=term-missing --cov-report=xml
        continue-on-error: true
      
      - name: Test package installation
        run: |
          pip install -e .
          xandai --help

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: |
          python -m build
      
      - name: Check package with twine
        run: |
          twine check dist/*
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/xandai-cli
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Use API token authentication
          # Set PYPI_API_TOKEN in repository secrets
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Uncomment the line below for test PyPI
          # repository-url: https://test.pypi.org/legacy/

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            ## XandAI ${{ steps.tag.outputs.tag }}
            
            ### 🚀 New Release
            
            This release includes the latest features and improvements to XandAI CLI.
            
            ### 📦 Installation
            
            ```bash
            pip install xandai-cli==${{ steps.tag.outputs.tag }}
            ```
            
            ### 📋 Changes
            
            See the commits included in this release for detailed changes.
            
            ### 🐛 Issues
            
            If you encounter any issues, please report them on our [Issues page](https://github.com/${{ github.repository }}/issues).
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
